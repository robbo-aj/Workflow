@using Workflow.Models;

@model PersonViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit @Model.FirstName</h2>
<hr />

<form id="EditPersonForm" asp-controller="Person" asp-action="Edit" method="post">

    @Html.HiddenFor(p => p.SerialisedHobbies, new { id = "HobbyData" })

    <div class="row">
        <div class="col-md-12">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nickname" class="control-label"></label>
                <input asp-for="Nickname" class="form-control" />
                <span asp-validation-for="Nickname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Age" class="control-label"></label>
                <input asp-for="Age" class="form-control" />
                <span asp-validation-for="Age" class="text-danger"></span>
            </div>
            <div class="form-group">
                @(Html.Kendo().Grid<HobbyViewModel>(Model.Hobbies)
                            .Name("HobbyGrid")
                            .ToolBar(toolbar =>
                            {
                                toolbar.Create().Text("Add a new Hobby");
                            })
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.Id).Hidden();
                                columns.Bound(p => p.Name).Title("Hobby").Width(250);
                                columns.Bound(p => p.Started).Title("Started Hobby").Format("{0:dd-MMM-yyyy}").Width(250);
                                columns.Command(command => command.Destroy()).Width(80).Title("Action");
                            })
                            .Scrollable()
                            .Sortable()
                            .Editable(editable => editable.Mode(GridEditMode.InCell))
                            .DataSource(dataSource => dataSource
                                .Ajax()
                                .Batch(true)
                                .PageSize(20)
                                .ServerOperation(false)
                                .Model(model => model.Id(p => p.Id))
                            )

                            .HtmlAttributes(new { style = "height: 300px;" })
                            .Pageable(pageable => pageable
                                .Refresh(true)
                                .PageSizes(true)
                                .ButtonCount(5))
                )
            </div>
            <hr />
            <div class="form-group">
                <input type="button" value="Save Person" class="btn btn-default" onclick="onSavePerson()" />
            </div>
        </div>
    </div>

</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script type="text/javascript">

    function onSavePerson() {
        var json = kendo.stringify($("#HobbyGrid").data("kendoGrid").dataSource.view());
        $("#HobbyData").val(json);
        $("#EditPersonForm").submit();
    }

</script>
